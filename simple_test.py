#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –æ–¥–∏–Ω –∞–≥–µ–Ω—Ç –ø–∏—à–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–∫—Å—Ç–∞
–ó–∞–ø—É—Å–∫: venv\Scripts\python.exe simple_test.py
"""
import os
from datetime import datetime
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
def load_env():
    env_file = Path(__file__).parent / ".env"
    if env_file.exists():
        with open(env_file, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key.strip()] = value.strip()

load_env()

try:
    from agents import Agent, Runner
    print("‚úÖ OpenAI Agents SDK –∑–∞–≥—Ä—É–∂–µ–Ω")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    exit(1)

def main():
    print("üìù –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –æ–¥–∏–Ω –∞–≥–µ–Ω—Ç, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ–∫—Å—Ç–∞")
    print("=" * 50)
    
    if not os.getenv("OPENAI_API_KEY"):
        print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–º—É
    print("\nü§î –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É:")
    topic = input("‚û§ ").strip()
    
    if not topic:
        print("‚ùå –¢–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π")
        return
    
    print(f"\nüîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ç–µ–º—É: '{topic}'")
    print("‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç 30-60 —Å–µ–∫—É–Ω–¥...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–µ–∫—Å—Ç–∞
        agent = Agent(
            name="Content Writer",
            instructions="""
            –ù–∞–ø–∏—à–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é —Ç–µ–º—É.
            
            –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
            1. –ö—Ä–∞—Ç–∫–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ (1 –∞–±–∑–∞—Ü)
            2. –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å (2-3 –∞–±–∑–∞—Ü–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏)
            3. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã (1 –∞–±–∑–∞—Ü)
            
            –°—Ç–∏–ª—å: –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, –ø–æ–Ω—è—Ç–Ω—ã–π, —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.
            –û–±—ä–µ–º: –ø—Ä–∏–º–µ—Ä–Ω–æ 300-500 —Å–ª–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ–∫—Å—Ç–∞).
            """,
            model="gpt-4o"
        )
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        result = Runner.run_sync(agent, f"–ù–∞–ø–∏—à–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ç–µ–º—É: {topic}")
        content = result.final_output
        
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        output_dir = Path("output")
        output_dir.mkdir(exist_ok=True)
        
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        safe_topic = topic.replace(' ', '_').replace('/', '_').lower()
        filename = f"page_{safe_topic}_{timestamp}.md"
        filepath = output_dir / filename
        
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(f"# {topic}\n\n")
            f.write(f"*–°–æ–∑–¥–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}*\n")
            f.write(f"*–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: OpenAI Agents SDK*\n\n")
            f.write(f"{content}\n")
        
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filepath}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        preview = content[:200] + "..." if len(content) > 200 else content
        print(f"\nüìñ –ù–∞—á–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:\n{preview}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        word_count = len(content.split())
        char_count = len(content)
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –°–ª–æ–≤: {word_count}")
        print(f"   –°–∏–º–≤–æ–ª–æ–≤: {char_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüëã –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    main() 